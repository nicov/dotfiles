#!/usr/bin/env bash
#
# inspired from https://github.com/holman/dotfiles

source $HOME/.dotfiles/script/utils

log_file=$HOME/.dotfiles/install.log

install_submodules () {
  cd $HOME/.dotfiles
  git submodule init
  git submodule update
}

install_dotfiles () {
  for file in $(ls ~/.dotfiles/dotfiles)
  do
    install_dotfile $file
  done
}

install_dotfile () {
  file=$1
  src=$HOME/.dotfiles/dotfiles/$file
  dst=$HOME/.$file

  if [ -f $dst ] || [ -d $dst ]
  then
    if [ -h $dst ] && [ $(readlink $dst) == $src ]
    then
      info "$dst is already symlinked"
    else
      while $loop
      do
        loop=false

        user "File already exists: `basename $file`, what do you want to do? show [d]ifferences, [s]kip, [o]verwrite, [b]ackup?"
        read action

        # erase previous line
        echo -en "\e[1A\e[K"

        case "$action" in
          d )
            diff $dst $src | less
            loop=true
            ;;
          o )
            rm -rf "$dst"
            success "removed $dst"
            link_files $src $dst
            ;;
          b )
            mv "$dst" "${dst}.backup"
            success "moved $dst to ${dst}.backup"
            link_files $src $dst
            ;;
          * )
            ;;
        esac
      done
    fi
  else
    # si c'est un lien, et donc un lien mort
    if [ -h $dst ] 
    then
      # on le supprime
      rm -f $dst
      success "removed dead link $dst"
    fi

    link_files $src $dst
  fi
}

install_task () {
  task=$1
  title=$2

  process "$title"
  $task >> $log_file
  success "$title"
}

install_task_term () {
  task=$1
  title=$2

  tput smcup
  $task | tee -a $log_file
  tput rmcup
  success "$title"
}

install_dotfiles

# in order to update the ~/.bashrc.d files sources
source ~/.bashrc
