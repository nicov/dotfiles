#!/usr/bin/env bash
#
# bootstrap installs things.
# 
# altered from https://github.com/holman/dotfiles

DOTFILES_ROOT="`pwd`"

set -e

echo ''

info () {
  printf "  [ \033[00;34m..\033[0m ] $1"
}

user () {
  printf "\r  [ \033[0;33m?\033[0m ] $1 "
}

success () {
  printf "\r\033[2K  [ \033[00;32mOK\033[0m ] $1\n"
}

fail () {
  printf "\r\033[2K  [\033[0;31mFAIL\033[0m] $1\n"
  echo ''
  exit
}

link_files () {
  ln -s $1 $2
  success "linked $1 to $2"
}

install_dotfiles () {
  info 'installing dotfiles'

  dotfiles="vimrc vim"

  overwrite_all=false
  backup_all=false
  skip_all=false

  for file in $dotfiles
  do
    src="$HOME/.dotfiles/$file"
    dest="$HOME/.$file"

    if [ -f $dest ] || [ -d $dest ]
    then

      overwrite=false
      backup=false
      skip=false

      if [ "$overwrite_all" == "false" ] && [ "$backup_all" == "false" ] && [ "$skip_all" == "false" ]
      then
        user "File already exists: `basename $file`, what do you want to do? [s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all?"
        read action

        case "$action" in
          o )
            overwrite=true;;
          O )
            overwrite_all=true;;
          b )
            backup=true;;
          B )
            backup_all=true;;
          s )
            skip=true;;
          S )
            skip_all=true;;
          * )
            ;;
        esac
      fi

      if [ "$overwrite" == "true" ] || [ "$overwrite_all" == "true" ]
      then
        rm -rf $dest
        success "removed $dest"
      fi

      if [ "$backup" == "true" ] || [ "$backup_all" == "true" ]
      then
        mv $dest $dest\.backup
        success "moved $dest to $dest.backup"
      fi

      if [ "$skip" == "false" ] && [ "$skip_all" == "false" ]
      then
        link_files $src $dest
      else
        success "skipped $src"
      fi

    else
      link_files $src $dest
    fi

  done
}

clone_vim_submodules () {
  cd $HOME/.dotfiles
  git submodule init
  git submodule update
}

install_powerline_fonts () {
  # source: https://powerline.readthedocs.org/en/latest/installation/linux.html#font-installation

  if ! [ -d ~/.fonts ]
    then mkdir ~/.fonts
  fi

  if ! [ -f ~/.fonts/PowerlineSymbols.otf ]
    then wget -P ~/.fonts/ https://github.com/Lokaltog/powerline/raw/develop/font/PowerlineSymbols.otf
  fi

  fc-cache -vf ~/.fonts

  if ! [ -d ~/.fonts.conf.d ]
    then mkdir ~/.fonts.conf.d
  fi

  if ! [ -f ~/.fonts.conf.d/10-powerline-symbols.conf ]
    then wget -P ~/.fonts.conf.d/ https://github.com/Lokaltog/powerline/raw/develop/font/10-powerline-symbols.conf
  fi
}

install_solarized () {
  if ! [ -d ~/gnome-terminal-colors-solarized ]
    then git clone https://github.com/Anthony25/gnome-terminal-colors-solarized.git ~/gnome-terminal-colors-solarized
  fi

  bash ~/gnome-terminal-colors-solarized/set_dark.sh
}

clone_vim_submodules
install_dotfiles
install_powerline_fonts
install_solarized
